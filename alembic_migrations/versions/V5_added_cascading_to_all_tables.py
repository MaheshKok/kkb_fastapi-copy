"""added cascading to all tables

Revision ID: 98d005381e5f
Revises: b41d3a33634e
Create Date: 2023-09-17 22:15:14.293492

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "98d005381e5f"
down_revision = "b41d3a33634e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("broker", "access_token", existing_type=sa.TEXT(), nullable=False)
    op.alter_column("broker", "twoFA", existing_type=sa.INTEGER(), nullable=False)
    op.drop_constraint("broker_user_id_fkey", "broker", type_="foreignkey")
    op.create_foreign_key(None, "broker", "user", ["user_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("daily_profit_strategy_id_fkey", "daily_profit", type_="foreignkey")
    op.create_foreign_key(
        None, "daily_profit", "strategy", ["strategy_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("strategy_broker_id_fkey", "strategy", type_="foreignkey")
    op.drop_constraint("strategy_user_id_fkey", "strategy", type_="foreignkey")
    op.create_foreign_key(None, "strategy", "broker", ["broker_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "strategy", "user", ["user_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint(
        "take_away_profit_strategy_id_fkey", "take_away_profit", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "take_away_profit", "strategy", ["strategy_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("trade_strategy_id_fkey", "trade", type_="foreignkey")
    op.create_foreign_key(None, "trade", "strategy", ["strategy_id"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "trade", type_="foreignkey")
    op.create_foreign_key("trade_strategy_id_fkey", "trade", "strategy", ["strategy_id"], ["id"])
    op.drop_constraint(None, "take_away_profit", type_="foreignkey")
    op.create_foreign_key(
        "take_away_profit_strategy_id_fkey",
        "take_away_profit",
        "strategy",
        ["strategy_id"],
        ["id"],
    )
    op.drop_constraint(None, "strategy", type_="foreignkey")
    op.drop_constraint(None, "strategy", type_="foreignkey")
    op.create_foreign_key("strategy_user_id_fkey", "strategy", "user", ["user_id"], ["id"])
    op.create_foreign_key("strategy_broker_id_fkey", "strategy", "broker", ["broker_id"], ["id"])
    op.drop_constraint(None, "daily_profit", type_="foreignkey")
    op.create_foreign_key(
        "daily_profit_strategy_id_fkey", "daily_profit", "strategy", ["strategy_id"], ["id"]
    )
    op.drop_constraint(None, "broker", type_="foreignkey")
    op.create_foreign_key("broker_user_id_fkey", "broker", "user", ["user_id"], ["id"])
    op.alter_column("broker", "twoFA", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("broker", "access_token", existing_type=sa.TEXT(), nullable=True)
    # ### end Alembic commands ###
